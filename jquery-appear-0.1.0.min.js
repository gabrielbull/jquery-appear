(function ($) {
    var methods = {
        init: function (options) {
            return this.each(function () {
                var element = $(this);
                var _window = $(window);

                var settings = $.extend({
                    appeared: false,
                    appearDelay: 0,
                    disappearDelay: 0,
                    appearTarget: null,
                    disappearTarget: null,
                    appearCallback: null,
                    disappearCallback: null
                }, options);

                settings.appearTarget = element;
                if (typeof settings.disappearTarget === 'undefined' || settings.disappearTarget === null) {
                    settings.disappearTarget = settings.appearTarget;
                }

                element.data('jquery-appear', settings);

                _window.on('scroll resize', function () {
                    methods.checkIfElementIsInViewport(_window, settings);
                });
                methods.checkIfElementIsInViewport(_window, settings, true);
            });
        },

        triggerAppeared: function (object) {
            setTimeout(function () {
                if (object.appeared) {
                    object.appearTarget.trigger('appear');
                    if (typeof object.appearCallback === 'function') {
                        object.appearCallback(object.appearTarget[0]);
                    }
                }
            }, object.appearDelay);
        },

        triggerDisappear: function (object) {
            setTimeout(function () {
                if (!object.appeared) {
                    object.appearTarget.trigger('disappear');
                    if (typeof object.disappearCallback === 'function') {
                        object.disappearCallback(object.appearTarget[0]);
                    }
                }
            }, object.disappearDelay);
        },

        checkIfElementIsInViewport: function (window, object, forceTrigger) {
            if (typeof forceTrigger === 'undefined' || forceTrigger === null) {
                forceTrigger = false;
            }

            if (!object.appearTarget.is(':visible')) {
                if (object.appeared) {
                    methods.triggerDisappear(object);
                }
                object.appeared = false;
                return;
            }

            var isVisible = false;
            if (methods.isElementInViewportY(window, object.appearTarget)) {
                isVisible = true;
                if (!object.appeared || forceTrigger) {
                    methods.triggerAppeared(object);
                }
                object.appeared = true;
            } else if (object.appeared && !methods.isElementInViewportY(window, object.disappearTarget)) {
                if (object.appeared || forceTrigger) {
                    methods.triggerDisappear(object);
                }
                object.appeared = false;
            }
        },

        isElementInViewportY: function (window, element) {
            var elementTop = element.offset().top;
            var elementBottom = elementTop + element.outerHeight();
            return methods._isElementInViewportY(window, element, elementTop, elementBottom);
        },

        _isElementInViewportY: function (window, element, elementTop, elementBottom) {
            var windowTop = window.scrollTop();
            var windowBottom = windowTop + window.outerHeight();

            if (elementTop >= windowTop && elementTop <= windowBottom) {
                return true;
            } else if (elementBottom >= windowTop && elementBottom <= windowBottom) {
                return true;
            }
            return false;
        }
    };

    $.fn.appear = function (method) {
        // Method calling logic
        if (methods[method]) {
            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
        } else if (typeof method === 'object' || !method) {
            return methods.init.apply(this, arguments);
        } else {
            $.error('Method ' + method + ' does not exist on jQuery.appear');
        }
    };

})(jQuery);
